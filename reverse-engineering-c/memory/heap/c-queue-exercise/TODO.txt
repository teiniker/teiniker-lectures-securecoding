Exercise: C Memory Management - Queue
-------------------------------------------------------------------------------

For the given implementation of a queue, add the following code:

1) queue_node *new_node(int value)
	Create a new queue_node structure instance on the heap.

2) queue *queue_init()
	Create a new queue structure instance on the heap.

3) int queue_dequeue(queue *queue_ptr)
	Read a value from the queue's tail and remove the queue_node instance
	from the heap.

4) void queue_dest(queue *queue_ptr)
	Remove the queue instance from the heap.

Ensure that all memory blocks will be released. 
Use valgrind to ensure that no memory leaks are possible.

To create instances of structures use the following memory management functions
provided by the standard C library:

    void *malloc(size_t size);
    void free(void *ptr);


Example: 

Queue: ->tail[1 ]<-head
Queue: ->tail[1 2 ]<-head
Queue: ->tail[1 2 3 ]<-head
Queue: ->tail[1 2 3 4 ]<-head
1
Queue: ->tail[2 3 4 ]<-head
2
Queue: ->tail[3 4 ]<-head
3
Queue: ->tail[4 ]<-head
4
[ ]

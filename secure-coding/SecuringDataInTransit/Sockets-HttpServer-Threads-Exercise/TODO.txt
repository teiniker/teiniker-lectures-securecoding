Exercise: HTTP Server Threads
---------------------------------------------------------------------

The given simplified HTTP server called "HttpServerSingleThreaded" 
should be extended to handle more clients at the same time.

Start the server on the command line:

	$ java -cp ./target/classes org.se.lab.HttpServerSingleThreaded

Execute the curl command to send a client request:

$ curl -i -X GET http://localhost:8080/index.html


1. One Thread per Request Strategy
---------------------------------------------------------------------
Implement a class called "HttpServerThreadPerRequest" that creates
a new thread for every client request.
Print out the current thread ID to monitor the number of used threads.

Run the server with:  
	$ java -cp ./target/classes org.se.lab.HttpServerThreadPerRequest
	
and use the same test class to simulate client requests.


2. Thread-Pool Strategy
---------------------------------------------------------------------
Implement a class called "HttpServerThreadPool" that uses the Executor
framework to create a fix sized thread pool with 5 threads.
Print out the current thread ID to monitor the number of used threads.
 
Run the server with: 
	$ java -cp ./target/classes org.se.lab.HttpServerThreadPool
	
and use the same test class to simulate client requests.
 